`timescale 1ns / 1ps


module control_unit(op, func, clk, wreg, m2reg,wmem, aluc, aluimm, regrt);
    input [5:0] op;
    input [5:0] func;
    input clk;
    output reg wreg;
    output reg m2reg;
    output reg wmem;
    output reg [3:0] aluc;
    output reg aluimm;
    output reg regrt;
    
    always@(*)
    begin
        case(op)
            6'b100011: 
            begin
                 wreg <= 1'b1;
                 m2reg <= 1'b1;
                 wmem <= 1'b0;
                 aluimm <= 1'b1;
                 regrt <= 1'b1;
                 aluc <= 4'b0010;
            end
            6'b000000:
            begin
            if (func == 6'b100000)//add
             begin
                 wreg <= 1'b1;
                 m2reg <= 1'b0;
                 wmem <= 1'b0;
                 aluimm <= 1'b0;
                 regrt <= 1'b0;
                 aluc <= 4'b0010;
             end 
            
            if(func == 6'b100010)//sub
             begin
                 wreg <= 1'b1;
                 m2reg <= 1'b0;
                 wmem <= 1'b0;
                 aluimm <= 1'b0;
                 regrt <= 1'b0;
                 aluc <= 4'b0110;    
            end
            if(func == 6'b100101)//or
                begin
                    wreg <= 1'b1;
                    m2reg <= 1'b0;
                    wmem <= 1'b0;
                    aluimm <= 1'b0;
                    regrt <= 1'b0;
                    aluc <= 4'b0001;
            end
            if(func == 6'b100110)//xor
                begin
                wreg <= 1'b1;
                m2reg <= 1'b0;
                wmem <= 1'b0;
                aluimm <= 1'b0; 
                regrt <= 1'b0;
                aluc <= 4'b1111;
            end
            if(func == 6'b100100)//and
                begin
                wreg <= 1'b1;
                m2reg <= 1'b0;
                wmem <= 1'b0;
                aluimm <= 1'b0;
                regrt <= 1'b0;
                aluc <= 4'b0000;                
            end    
            end
            
        endcase
        end
   
    
endmodule
